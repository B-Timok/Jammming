{"ast":null,"code":"var _jsxFileName = \"/workspaces/Jammming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport \"./App.css\";\nimport Playlist from \"../Playlist/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Spotify from \"../../utils/Spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"New Playlist\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const search = useCallback(term => {\n    Spotify.search(term).then(setSearchResults);\n  }, []);\n  const addTrack = useCallback(track => {\n    if (playlistTracks.some(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    setPlaylistTracks(prevTrack => [...prevTrack, track]);\n  }, [playlistTracks]);\n  const removeTrack = useCallback(track => {\n    setPlaylistTracks(prevTrack => {\n      return prevTrack.filter(currentTrack => currentTrack.id !== track.id);\n    });\n  }, []);\n  const updatePlaylistName = useCallback(name => {\n    setPlaylistName(name);\n  }, []);\n  const savePlaylist = useCallback(() => {\n    const trackURIs = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      setPlaylistName(\"New Playlist\");\n      setPlaylistTracks([]);\n    });\n  }, [playlistName, playlistTracks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          searchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"iQ609vNSd65xzaaW7luOzTFFllQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Playlist","SearchBar","SearchResults","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","search","term","then","addTrack","track","some","savedTrack","id","prevTrack","removeTrack","filter","currentTrack","updatePlaylistName","name","savePlaylist","trackURIs","map","uri","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAdd","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/workspaces/Jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport \"./App.css\";\n\nimport Playlist from \"../Playlist/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Spotify from \"../../utils/Spotify\";\n\nconst App = () => {\n    const [searchResults, setSearchResults] = useState([]);\n    const [playlistName, setPlaylistName] = useState(\"New Playlist\");\n    const [playlistTracks, setPlaylistTracks] = useState([]);\n\n    const search = useCallback((term) => {\n        Spotify.search(term).then(setSearchResults);\n    }, []);\n\n    const addTrack = useCallback((track) => {\n        if (playlistTracks.some((savedTrack) => savedTrack.id === track.id)) {\n            return;\n        }\n        setPlaylistTracks((prevTrack) => [...prevTrack, track]);\n        }, [playlistTracks]\n    );\n\n    const removeTrack = useCallback((track) => {\n        setPlaylistTracks((prevTrack) => {\n            return prevTrack.filter((currentTrack) => currentTrack.id !== track.id);\n        })\n    }, []);\n\n    const updatePlaylistName = useCallback((name) => {\n        setPlaylistName(name);\n    }, []);\n\n    const savePlaylist = useCallback(() => {\n        const trackURIs = playlistTracks.map((track) => track.uri);\n        Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n            setPlaylistName(\"New Playlist\");\n            setPlaylistTracks([]);\n        });\n    }, [playlistName, playlistTracks]);\n\n    return (\n        <div>\n            <h1>\n                Ja<span className=\"highlight\">mmm</span>ing\n            </h1>\n            <div className=\"App\">\n                <SearchBar onSearch={search} />\n                <div className=\"App-playlist\">\n                    <SearchResults searchResults={searchResults} onAdd={addTrack} />\n                    <Playlist\n                        playlistName={playlistName}\n                        playlistTracks={playlistTracks}\n                        onRemove={removeTrack}\n                        onNameChange={updatePlaylistName}\n                        onSave={savePlaylist}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}